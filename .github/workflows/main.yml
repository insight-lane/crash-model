# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.2' 
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
    - name: Run test
      run: |
        set -eo pipefail
        cd src
        pylint pipeline.py initialize_city.py data/*.py visualization/*.py data_standardization/*.py models/*.py features/*.py tools/*.py
        py.test
  mac_2:
    env:
      PYTHONFAULTHANDLER: "true"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        activate-environment: crash-model
        environment-file: environment_mac.yml
    - name: Run mac tests
      run: |
        set -eo pipefail
        . /usr/local/miniconda/etc/profile.d/conda.sh
        sudo chown -R $USER $CONDA
        conda activate crash-model
        cd src
        py.test
  mac_3:
    env:
      PYTHONFAULTHANDLER: "true"
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        activate-environment: crash-model
        environment-file: environment_mac.yml
        channels: conda-forge, defaults
        channel-priority: strict
    - name: Run mac tests
      run: |
        set -eo pipefail
        . /usr/local/miniconda/etc/profile.d/conda.sh
        sudo chown -R $USER $CONDA
        conda activate crash-model
        cd src
        py.test